/* TODO:
 * command.cpp: добавить в switch default
 * Добавить проверки входных данных
 * Убрать везде лишние переменные, для передачи их в функции, передавать выражением (например, в command.cpp)
 * Сделать оболочку для открытия и закрытия файлов
 * Все функции, выполняющие несколько действий разбить, например copy_model
 * Если функция не отрабатывает, освободить занятую память!
 * model_type.h: динамический массив и размерность массива объединить в структуру (точки и ребра)
 * 2 return'а - при проверке входных данных и в конце функции (model.cpp:21)
 * Сквозная ошибка! Убрать bool в качестве ошибки
 * draw.h: абстрагировать от QPainter, получать QPainter *paint только в самой последней функции draw_edge
 * Следить за памятью и открытием/закрытием файлов!
 * Перепроверить transform.cpp!
 * model.cpp:28 - не выделять память под временную модель динамически
 * Добавить разбиение файлов - point.cpp, edge.cpp
 */

#include "mainwindow.h"
#include <QApplication>

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    MainWindow w;
    w.show();

    return a.exec();
}
